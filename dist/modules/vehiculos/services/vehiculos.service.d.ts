import { CreateVehiculoDto, UpdateVehiculoDto } from '../dto';
import { FilesService } from 'src/modules/files/files.service';
import { VehiculoAPI } from '../interfaces/vehiculo.interface';
import { DatabaseService } from 'src/modules/database/database.service';
import { ContactarDto } from '../dto/contactar.dto';
export declare class VehiculosService {
    private fileService;
    private readonly databaseService;
    constructor(fileService: FilesService, databaseService: DatabaseService);
    create(createVehiculoDto: CreateVehiculoDto): Promise<{
        imagesFolderName: string;
        patente: string;
        chasis: string;
        numeroMotor: string;
        modeloFK: number;
        anio: number;
        kilometraje: number;
        numeroPuertas: number;
        numeroAsientos: number;
        descripcion: string;
        version: string;
        cantidadLlaves: number;
        cilindrada: string;
        tipoVehiculoFK: number;
        tipoCombustibleFK: number;
        transmisionFK: number;
        colorExteriorFK: number;
        colorInteriorFK: number;
        condicionVehiculoFK: number;
        traccionFK: number;
        id: any;
    }>;
    findAll(): Promise<any>;
    findAllWithImagesSeller(): Promise<any[]>;
    findAllWithImages(): Promise<any[]>;
    findTipoCombustible(): Promise<any>;
    findTransmision(): Promise<any>;
    findMarcaVehiculo(): Promise<any>;
    findCondicionVehiculo(): Promise<any>;
    findColores(): Promise<any>;
    findColoresHex(): Promise<any>;
    findVehiculoAnios(): Promise<any>;
    findTipoVehiculo(): Promise<any>;
    findTraccion(): Promise<any>;
    getCilindradas(): Promise<any>;
    eliminarVehiculo(id: number): Promise<void>;
    findOne(id: number): Promise<any>;
    getVehicleByPatente(patente: string): VehiculoAPI;
    registrarIntentoContactar(contactarDto: ContactarDto): Promise<void>;
    editarVehiculo(id: number, updateVehiculoDto: UpdateVehiculoDto): Promise<any>;
    private handleDBExceptions;
}
